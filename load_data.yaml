name: PI_datasets
description: Loads MNIST dataset, splits it into train/test and additional pierce splits.
outputs:
  - {name: x_train, type: Dataset}
  - {name: y_train, type: Dataset}
  - {name: x_test, type: Dataset}
  - {name: y_test, type: Dataset}
  - {name: x_pierce_splits, type: Dataset}
  - {name: y_pierce_splits, type: Dataset}
implementation:
  container:
    image: python:3.9
    command:
      - sh
      - -c
      - |
        PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet tensorflow numpy scikit-learn keras || \
        PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet tensorflow numpy scikit-learn keras --user
        exec "$0" "$@"
      - python3
      - -u
      - -c
      - |
        import argparse
        import os
        import pickle
        import numpy as np
        from sklearn.model_selection import train_test_split
        from keras.datasets import mnist

        parser = argparse.ArgumentParser()
        parser.add_argument('--x_train', type=str, required=True)
        parser.add_argument('--y_train', type=str, required=True)
        parser.add_argument('--x_test', type=str, required=True)
        parser.add_argument('--y_test', type=str, required=True)
        parser.add_argument('--x_pierce_splits', type=str, required=True)
        parser.add_argument('--y_pierce_splits', type=str, required=True)
        args = parser.parse_args()

        (x_train_all, y_train_all), (x_test, y_test) = mnist.load_data()
        x_train_all = x_train_all
        y_train_all = y_train_all
        x_test = x_test
        y_test = y_test
        x_train, x_train_stream, y_train, y_train_stream = train_test_split(
            x_train_all, y_train_all, test_size=0.3, random_state=42, stratify=y_train_all
        )

        x_pierce_splits = np.array_split(x_train_stream, 10)
        y_pierce_splits = np.array_split(y_train_stream, 10)

        # Ensure output directories
        os.makedirs(os.path.dirname(args.x_train), exist_ok=True)
        os.makedirs(os.path.dirname(args.y_train), exist_ok=True)
        os.makedirs(os.path.dirname(args.x_test), exist_ok=True)
        os.makedirs(os.path.dirname(args.y_test), exist_ok=True)
        os.makedirs(os.path.dirname(args.x_pierce_splits), exist_ok=True)
        os.makedirs(os.path.dirname(args.y_pierce_splits), exist_ok=True)

        # Save using pickle
        with open(args.x_train, "wb") as f: pickle.dump(x_train, f)
        with open(args.y_train, "wb") as f: pickle.dump(y_train, f)
        with open(args.x_test, "wb") as f: pickle.dump(x_test, f)
        with open(args.y_test, "wb") as f: pickle.dump(y_test, f)
        with open(args.x_pierce_splits, "wb") as f: pickle.dump(x_pierce_splits, f)
        with open(args.y_pierce_splits, "wb") as f: pickle.dump(y_pierce_splits, f)
    args:
      - --x_train
      - {outputPath: x_train}
      - --y_train
      - {outputPath: y_train}
      - --x_test
      - {outputPath: x_test}
      - --y_test
      - {outputPath: y_test}
      - --x_pierce_splits
      - {outputPath: x_pierce_splits}
      - --y_pierce_splits
      - {outputPath: y_pierce_splits}
